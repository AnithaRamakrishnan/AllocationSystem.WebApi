// <auto-generated />
using System;
using AllocationSystem.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AllocationSystem.WebApi.Migrations
{
    [DbContext(typeof(AllocationSystemDbContext))]
    partial class AllocationSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Latin1_General_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AllocationSystem.WebApi.Models.AdminSetting", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsAllocationDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTopicMultiple")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastSubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("NoOfGroups")
                        .HasColumnType("int");

                    b.Property<int>("NoOfPreferences")
                        .HasColumnType("int");

                    b.Property<int>("TeamSize")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("AdminSetting", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.AllocationHistory", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("ProcessEndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ProcessStartDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID")
                        .HasName("PK_AllocationHistory_ID");

                    b.ToTable("AllocationHistory", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Group", b =>
                {
                    b.Property<long>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GroupID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("SupervisorID")
                        .HasColumnType("bigint");

                    b.Property<long?>("TopicID")
                        .HasColumnType("bigint");

                    b.HasKey("GroupID")
                        .HasName("PK_Group_GroupID");

                    b.HasIndex("TopicID");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Preference", b =>
                {
                    b.Property<long>("PreferenceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PreferenceID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PreferenceOrder")
                        .HasColumnType("int");

                    b.Property<long>("StudentID")
                        .HasColumnType("bigint");

                    b.Property<long>("TopicID")
                        .HasColumnType("bigint");

                    b.HasKey("PreferenceID")
                        .HasName("PK_Preference_PreferenceID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TopicID");

                    b.ToTable("Preference", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Student", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<string>("AcademicYear")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("GroupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long?>("TopicID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID")
                        .HasName("PK_Student_ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Supervisor", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID")
                        .HasName("PK_Supervisor_EmployeeID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Supervisor", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.SupervisorChoice", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("SupervisorID")
                        .HasColumnType("bigint");

                    b.Property<long>("TopicID")
                        .HasColumnType("bigint");

                    b.HasKey("ID")
                        .HasName("PK_SupervisorChoice_ID");

                    b.HasIndex("SupervisorID");

                    b.HasIndex("TopicID");

                    b.ToTable("SupervisorChoice", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Topic", b =>
                {
                    b.Property<long>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TopicID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicID")
                        .HasName("PK_Topic_TopicID");

                    b.ToTable("Topic", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<long?>("LastUpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("LastUpdatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("UserType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK_User_ID");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Group", b =>
                {
                    b.HasOne("AllocationSystem.WebApi.Models.Topic", "Topics")
                        .WithMany("Groups")
                        .HasForeignKey("TopicID");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Preference", b =>
                {
                    b.HasOne("AllocationSystem.WebApi.Models.Student", "Student")
                        .WithMany("Preferences")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AllocationSystem.WebApi.Models.Topic", "Topic")
                        .WithMany("Preferences")
                        .HasForeignKey("TopicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Student", b =>
                {
                    b.HasOne("AllocationSystem.WebApi.Models.User", null)
                        .WithOne("Student")
                        .HasForeignKey("AllocationSystem.WebApi.Models.Student", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Supervisor", b =>
                {
                    b.HasOne("AllocationSystem.WebApi.Models.User", null)
                        .WithOne("Supervisor")
                        .HasForeignKey("AllocationSystem.WebApi.Models.Supervisor", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.SupervisorChoice", b =>
                {
                    b.HasOne("AllocationSystem.WebApi.Models.Supervisor", "Supervisors")
                        .WithMany()
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AllocationSystem.WebApi.Models.Topic", "Topics")
                        .WithMany()
                        .HasForeignKey("TopicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supervisors");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Student", b =>
                {
                    b.Navigation("Preferences");
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.Topic", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Preferences");
                });

            modelBuilder.Entity("AllocationSystem.WebApi.Models.User", b =>
                {
                    b.Navigation("Student");

                    b.Navigation("Supervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
